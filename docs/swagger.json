{
    "swagger": "2.0",
    "info": {
        "description": "A tunnel service for exposing local services to the internet",
        "title": "ShipIt Server API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "ShipIt Support",
            "url": "http://www.shipit.com/support",
            "email": "support@shipit.com"
        },
        "license": {
            "name": "MIT",
            "url": "http://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/analytics/overview": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get user's analytics overview for the specified period",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analytics"
                ],
                "summary": "Get analytics overview",
                "parameters": [
                    {
                        "type": "string",
                        "default": "24h",
                        "description": "Time period (24h, 7d, 30d)",
                        "name": "period",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Analytics overview",
                        "schema": {
                            "$ref": "#/definitions/handlers.AnalyticsOverviewResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid period parameter",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/token/info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Provides detailed information about the current authentication token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Get token information",
                "responses": {
                    "200": {
                        "description": "Token information",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Missing authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/validate": {
            "post": {
                "description": "Validates both API keys and JWT tokens. Can be called with either API key or JWT token in Authorization header or request body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Validate authentication token",
                "parameters": [
                    {
                        "description": "Token validation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ValidateTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token validation successful",
                        "schema": {
                            "$ref": "#/definitions/handlers.ValidateTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/handlers.ValidateTokenResponse"
                        }
                    },
                    "401": {
                        "description": "Token is invalid",
                        "schema": {
                            "$ref": "#/definitions/handlers.ValidateTokenResponse"
                        }
                    }
                }
            }
        },
        "/tunnels": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all tunnels for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tunnels"
                ],
                "summary": "List user tunnels",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by tunnel status (active, inactive, terminated)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of tunnels to return (default: 50, max: 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of tunnels to skip (default: 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tunnels",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new HTTP or TCP tunnel for exposing local services",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tunnels"
                ],
                "summary": "Create a new tunnel",
                "parameters": [
                    {
                        "description": "Tunnel creation parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateTunnelRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Tunnel created successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateTunnelResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data or tunnel limit reached",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Subdomain already taken",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/tunnels/{tunnel_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about a specific tunnel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tunnels"
                ],
                "summary": "Get tunnel details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tunnel ID",
                        "name": "tunnel_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tunnel details",
                        "schema": {
                            "$ref": "#/definitions/handlers.TunnelListResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Tunnel not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a specific tunnel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tunnels"
                ],
                "summary": "Delete tunnel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tunnel ID",
                        "name": "tunnel_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tunnel deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Tunnel not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/tunnels/{tunnel_id}/stats": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed statistics for a specific tunnel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tunnels"
                ],
                "summary": "Get tunnel statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tunnel ID",
                        "name": "tunnel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "24h",
                        "description": "Time period for statistics",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "requests,bandwidth,latency",
                        "description": "Metrics to include",
                        "name": "metrics",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tunnel statistics",
                        "schema": {
                            "$ref": "#/definitions/handlers.TunnelStatsResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Tunnel not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/api-keys": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new API key for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Create API key",
                "parameters": [
                    {
                        "description": "API key creation parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateAPIKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "API key created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Authenticate user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "User login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Invalid credentials or account deactivated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Logout user by revoking refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Logout user",
                "parameters": [
                    {
                        "description": "Refresh token to revoke",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get current user's profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "User profile",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update current user's profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "description": "Profile update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/refresh": {
            "post": {
                "description": "Refresh access token using refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Refresh token request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Invalid or expired refresh token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "Register a new user account with email, password, and name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.AnalyticsOverviewResponse": {
            "type": "object",
            "properties": {
                "active_tunnels": {
                    "type": "integer"
                },
                "generated_at": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "total_bandwidth": {
                    "description": "Human readable (e.g., \"2.3GB\")",
                    "type": "string"
                },
                "total_bandwidth_bytes": {
                    "type": "integer"
                },
                "total_requests": {
                    "type": "integer"
                },
                "total_tunnels": {
                    "type": "integer"
                }
            }
        },
        "handlers.CreateAPIKeyRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "expires_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateTunnelRequest": {
            "type": "object",
            "required": [
                "local_port",
                "protocol"
            ],
            "properties": {
                "local_port": {
                    "description": "Port on client side",
                    "type": "integer",
                    "minimum": 1
                },
                "protocol": {
                    "description": "\"http\" or \"tcp\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/handlers.TunnelProtocol"
                        }
                    ]
                },
                "subdomain": {
                    "description": "Optional custom subdomain",
                    "type": "string"
                }
            }
        },
        "handlers.CreateTunnelResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "ISO timestamp",
                    "type": "string"
                },
                "protocol": {
                    "description": "http or tcp",
                    "type": "string"
                },
                "public_port": {
                    "description": "For TCP tunnels only",
                    "type": "integer"
                },
                "public_url": {
                    "description": "Public URL for accessing tunnel",
                    "type": "string"
                },
                "status": {
                    "description": "Current status",
                    "type": "string"
                },
                "tunnel_id": {
                    "description": "UUID of created tunnel",
                    "type": "string"
                }
            }
        },
        "handlers.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handlers.RefreshTokenRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "handlers.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "minLength": 2
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "handlers.TunnelAnalyticsPoint": {
            "type": "object",
            "properties": {
                "bytes_in": {
                    "type": "integer"
                },
                "bytes_out": {
                    "type": "integer"
                },
                "error_count": {
                    "type": "integer"
                },
                "requests_count": {
                    "type": "integer"
                },
                "response_time_avg": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "handlers.TunnelListResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "local_port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "public_port": {
                    "type": "integer"
                },
                "public_url": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subdomain": {
                    "type": "string"
                },
                "tunnel_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "handlers.TunnelProtocol": {
            "type": "string",
            "enum": [
                "http",
                "tcp"
            ],
            "x-enum-varnames": [
                "ProtocolHTTP",
                "ProtocolTCP"
            ]
        },
        "handlers.TunnelStatsResponse": {
            "type": "object",
            "properties": {
                "active_connections": {
                    "type": "integer"
                },
                "analytics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.TunnelAnalyticsPoint"
                    }
                },
                "total_bytes_in": {
                    "type": "integer"
                },
                "total_bytes_out": {
                    "type": "integer"
                },
                "total_requests": {
                    "type": "integer"
                },
                "tunnel_id": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateProfileRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.ValidateTokenRequest": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "handlers.ValidateTokenResponse": {
            "type": "object",
            "properties": {
                "auth_type": {
                    "description": "\"api_key\" or \"jwt\"",
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "API key authentication for CLI agents and web users",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BearerAuth": {
            "description": "JWT token authentication for web users",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "description": "Authentication and user management endpoints",
            "name": "authentication"
        },
        {
            "description": "Tunnel management endpoints",
            "name": "tunnels"
        },
        {
            "description": "Analytics and statistics endpoints",
            "name": "analytics"
        },
        {
            "description": "Administrative endpoints (admin role required)",
            "name": "admin"
        }
    ]
}